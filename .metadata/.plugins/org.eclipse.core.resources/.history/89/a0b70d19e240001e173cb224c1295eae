package coding3;

import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class FindDuplicateIntegrsWithStreams {
    public static void main(String[] args) {
        List<Integer> numbers = Arrays.asList(1, 2, 3, 4, 2, 5, 6, 4, 7, 8, 1, 9, 10);

        Map<Integer, Long> duplicateCountMap = numbers.stream()
                .collect(Collectors.groupingBy(
                        
                		// Group by each number
                		number -> number, 
                        
                		// Count occurrences of each number
                		Collectors.counting() 
                ));

        List<Integer> duplicates = duplicateCountMap.entrySet().stream()
                
        		// Filter entries with count greater than 1
        		.filter(entry -> entry.getValue() > 1) 
                
        		// Get the keys (duplicate numbers)
        		.map(Map.Entry::getKey) 
                .collect(Collectors.toList());

        System.out.println("Duplicate Numbers: " + duplicates);
    }
}

